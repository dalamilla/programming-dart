/// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
/// By starting with 1 and 2, the first 10 terms will be:
///                     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
/// By considering the terms in the Fibonacci sequence whose values do not exceed
/// four million, find the sum of the even-valued terms.
library euler;

/// Solution of second Euler problem.
/// The function take the value [n] to limit the sum of Fibonacci numbers.
/// Returns the summatory [sum] of even Fibonacci numbers below [n].
num euler002(num n) {
  num sum = 0;

  num fib0 = 0;
  num fib1 = 1;
  num fib2 = fib0 + fib1;

  while (fib2 <= n) {
    if (fib2 % 2 == 0) {
      sum += fib2;
    }
    fib0 = fib1;
    fib1 = fib2;
    fib2 = fib0 + fib1;
  }

  return sum;
}
